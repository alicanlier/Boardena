create or replace FUNCTION T_FUNC_PUSHEDLIKE (XID IN VRCHAR2) -- shows pushed like count of a member 
	RETURN PUSHEDLIKE
IS
	RC PUSHEDLIKE
BEGIN
	OPEN RC FOR SELECT SUM(NUM) FROM T_WHOLIKEDLOG
	GROUP BY MEMID WHERE MEMID=XID;
	RETURN RC;
END;


---------------------------
SELECT COUNT(*) FROM T_WHOLIKEDLOG WHERE T_BOARD.NUM = T_WHOLIKEDLOG.NUM;

----------------------

CREATE OR REPLACE VIEW T_MEMBER_VIEW (ID,PASS,NAME,EMAIL,TEL,AGE,JOB,HOBBY,RECEIVEDLIKE,PUSHEDLIKE,COM_COUNT)
AS SELECT 
    ID,PASS,NAME,EMAIL,TEL,AGE,JOB,HOBBY,
    (SELECT SUM(LIKED) FROM T_COMMENT_VIEW GROUP BY WRITER) AS RECEIVEDLIKE,
    (SELECT SUM(NUM) FROM T_WHOLIKEDLOG GROUP BY MEMID) AS PUSHEDLIKE,
    (SELECT SUM(NUM) FROM T_BOARD GROUP BY WRITER) AS COM_COUNT
    FROM T_MEMBER, T_COMMENT_VIEW, T_WHOLIKEDLOG, T_BOARD
    WHERE T_MEMBER.ID = T_COMMENT_VIEW.WRITER AND T_MEMBER.ID = T_WHOLIKEDLOG.MEMID AND T_MEMBER.ID = T_BOARD.WRITER;
-------------------------------------
create or replace procedure UPHITLIKE(xnum in NUMBER, xhit in NUMBER, xliked in NUMBER)
  is -- 시작점
  newhit NUMBER; -- 사용할 변수를 선언
  newliked NUMBER;

  begin 
      select hit,liked into newhit,newliked
      from T_COMMENTHITLIKE 
      where num = xnum; 
    
      newhit := newhit + xhit; -- 인상된 급료
      newliked := newliked + xliked;
    
      update T_COMMENTHITLIKE set hit = newhit, liked = newliked
      where num = xnum; 
  end;

-------------------------------------
CREATE OR REPLACE VIEW T_COMMENT_VIEW AS SELECT 
    T_BOARD.NUM,
	T_BOARD.WRITER,
	T_BOARD.SUBJECT,
	T_BOARD.REG_DATE, 
	T_BOARD.REF,
	T_BOARD.RE_STEP,
	T_BOARD.RE_LEVEL,
	T_BOARD.CONTENT,
    T_COMMENTHITLIKE.HIT,
    T_COMMENTHITLIKE.LIKED
FROM T_BOARD, T_COMMENTHITLIKE 
WHERE T_BOARD.NUM = T_COMMENTHITLIKE.NUM;
------------------------
CREATE OR REPLACE VIEW T_MEMBER_VIEW (ID,PASS,NAME,EMAIL,TEL,AGE,JOB,HOBBY,RECEIVEDLIKE)
AS SELECT 
    ID,PASS,NAME,EMAIL,TEL,AGE,JOB,HOBBY,
    (SELECT SUM(LIKED) FROM T_COMMENT_VIEW GROUP BY WRITER) AS RECEIVEDLIKE,
    (SELECT SUM(NUM) FROM T_WHOLIKEDLOG GROUP BY MEMID) AS PUSHEDLIKE
    FROM T_MEMBER, T_COMMENT_VIEW, T_WHOLIKEDLOG
    WHERE T_MEMBER.ID = T_COMMENT_VIEW.WRITE;
-------------------------------
CREATE OR REPLACE VIEW T_PUSHEDLIKE_VIEW (MEMID, PUSHEDLIKE)
AS SELECT MEMID, COUNT(*) 
FROM T_WHOLIKEDLOG 
GROUP BY MEMID;

------
create or replace TRIGGER T_TRG_COMMENTLIKE
  AFTER INSERT
  ON T_BOARD
  FOR EACH ROW
  BEGIN
   INSERT INTO T_COMMENTHITLIKE VALUES(
   :NEW.NUM,0,0); --T_COMMENTHITLIKE_SEQ.NEXTVAL,
  END;